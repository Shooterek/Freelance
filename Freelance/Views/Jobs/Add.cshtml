@using Freelance.Core.Models
@using Freelance.Infrastructure.ViewModels.Jobs
@model Freelance.Infrastructure.ViewModels.Jobs.AddJobViewModel

<div class="row blue-strip">
    <div class="col-md-8 col-md-offset-2">
        <section id="header">
            <h2><b>Dodaj zlecenie</b></h2>
        </section>
    </div>
</div>

<div class="spacer"></div>

<div class="row">
    <div class="col-md-8 col-md-offset-2 col-sm-12 col-xs-12 white-background menu">
        <div class="col-sm-12">
            <div class="spacer"></div>
            @using (Html.BeginForm("Add", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div id="add-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.Title, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Job.Title, new { htmlAttributes = new { @class = "form-control round disable-next-button" } })
                        @Html.ValidationMessageFor(model => model.Job.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.Description, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.TextAreaFor(model => model.Job.Description, new { @class = "form-control disable-next-button", rows = 14, cols = 90 })
                            @Html.ValidationMessageFor(model => model.Job.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <button type="button" id="add-next" class="btn btn-primary pull-right round">Do przodu</button>
                        </div>
                    </div>

                    <div class="spacer"></div>
                </div>

                <div id="add-2" class="hidden">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.MinimumWage, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Job.MinimumWage, new { htmlAttributes = new { @class = "form-control input-short round" } })
                        @Html.ValidationMessageFor(model => model.Job.MinimumWage, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.MaximumWage, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Job.MaximumWage, new { htmlAttributes = new { @class = "form-control input-short round" } })
                        @Html.ValidationMessageFor(model => model.Job.MaximumWage, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.Localization, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Job.Localization, new { htmlAttributes = new { @class = "form-control input-short round" } })
                        @Html.ValidationMessageFor(model => model.Job.Localization, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.ServiceTypeId, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.Job.ServiceTypeId, Model.ServiceTypes, new {@class="round" })
                            @Html.ValidationMessageFor(model => model.Job.ServiceTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job.Availability, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @(Html.CheckBoxListForEnum<AddJobViewModel, Availability>(model => model.Job.Availability, "Availability"))
                            @Html.ValidationMessageFor(model => model.Job.Availability, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <button type="button" class="btn btn-default" id="add-photos">Wybierz zdjęcia</button>
                            <input class="hide" name="Photos" type="file" multiple id="Photos" accept="image/*" data-max-amount="5" />

                            <div class="spacer"></div>

                            <div class="row">
                                <div class="col-xs-12 preview-area">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="spacer"></div>

                    <div class="row">
                        <div class="col-xs-6">
                            <button type="button" id="add-previous" class="btn btn-primary pull-left round">Wróć</button>
                        </div>
                        <div class="col-xs-6">
                            <input type="submit" value="Opublikuj" class="btn btn-success pull-right round" />
                        </div>
                    </div>

                    <div class="spacer"></div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
