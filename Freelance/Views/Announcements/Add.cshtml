@using Freelance.Core.Models
@using Freelance.Infrastructure.ViewModels
@model Freelance.Infrastructure.ViewModels.AddAnnouncementViewModel

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Announcement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Announcement.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Announcement.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Announcement.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Announcement.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.ExpectedHourlyWage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Announcement.ExpectedHourlyWage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Announcement.ExpectedHourlyWage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.Localization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Announcement.Localization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Announcement.Localization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.ServiceTypeId, "ServiceTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Announcement.ServiceTypeId, Model.ServiceTypes)
                @Html.ValidationMessageFor(model => model.Announcement.ServiceTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Announcement.Availability, "Availability", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.CheckBoxListForEnum<AddAnnouncementViewModel, Availability>(model => model.Announcement.Availability, "Availability"))
                @Html.ValidationMessageFor(model => model.Announcement.Availability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
