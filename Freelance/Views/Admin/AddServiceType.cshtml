@model Freelance.Core.Models.ServiceType

@{
    var method = ViewBag.Method.Equals("Add") ? "AddServiceType" : "EditServiceType";
    var headerText = ViewBag.Method.Equals("Add") ? "Dodaj kategorię" : "Edytuj kategorię";
}

<div class="row blue-strip">
    <div class="col-md-8 col-md-offset-2">
        <section id="header">
            <h2><b>@headerText</b></h2>
        </section>
    </div>
</div>

<div class="spacer"></div>

<div class="row">
    <div class="col-md-8 col-md-offset-2 col-sm-12 col-xs-12 white-background menu">
        <div class="col-sm-12">
            <div class="spacer"></div>
            @using (Html.BeginForm(method, "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                
                @Html.HiddenFor(model => model.ServiceTypeId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Nazwa", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control round"} })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="spacer"></div>

                <div class="row">
                    <div class="col-xs-2">
                        @Html.ActionLink("Anuluj", "ServiceTypes", null, new { @class="btn btn-warning"})
                    </div>
                    <div class="col-xs-2">
                        <input type="submit" value=@(ViewBag.Method.Equals("Add") ? "Dodaj" : "Zatwierdź")
                               class="btn btn-success pull-left"/>
                    </div>
                </div>

                <div class="spacer"></div>
            }
        </div>
    </div>
</div>

